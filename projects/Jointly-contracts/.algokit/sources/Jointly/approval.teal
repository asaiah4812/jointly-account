#pragma version 10
intcblock 1 0 2 32 64 66
bytecblock 0x636f756e746572 0x 0x766f746573496e4661766f72 0x746f74616c566f7465 0x746f74616c4d656d62657273 0x766f746573416761696e7374 0x6578656375746564 0x0000000000000000 0x00 0x70726f706f73616c 0x0044 0x0000

// This TEAL was generated by TEALScript v0.105.3
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implemented in the contract, its respective branch will be "*NOT_IMPLEMENTED" which just contains "err"
txn ApplicationID
!
pushint 6
*
txn OnCompletion
+
switch *call_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *create_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED

*NOT_IMPLEMENTED:
	// The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?
	err

// createApplication()void
*abi_route_createApplication:
	// execute createApplication()void
	callsub createApplication
	intc 0 // 1
	return

// createApplication(): void
createApplication:
	proto 0 0

	// contracts\Jointly.algo.ts:51
	// this.totalMembers.value = 0
	bytec 4 //  "totalMembers"
	intc 1 // 0
	app_global_put

	// contracts\Jointly.algo.ts:52
	// this.executed.value = false
	bytec 6 //  "executed"
	intc 1 // 0
	bytec 8 // 0x00
	intc 1 // 0
	uncover 2
	setbit
	app_global_put

	// contracts\Jointly.algo.ts:53
	// this.counter.value = 1
	bytec 0 //  "counter"
	intc 0 // 1
	app_global_put
	retsub

// authorizeOnlyCreator()void
*abi_route_authorizeOnlyCreator:
	// execute authorizeOnlyCreator()void
	callsub authorizeOnlyCreator
	intc 0 // 1
	return

// authorizeOnlyCreator(): void
authorizeOnlyCreator:
	proto 0 0

	// contracts\Jointly.algo.ts:57
	// assert(this.txn.sender == this.app.creator, 'you are not authorize(app creator)')
	txn Sender
	txna Applications 0
	app_params_get AppCreator
	pop
	==

	// you are not authorize(app creator)
	assert
	retsub

// addMember(pay,address,string)void
*abi_route_addMember:
	// memberName: string
	txna ApplicationArgs 2
	extract 2 0

	// memberAddress: address
	txna ApplicationArgs 1
	dup
	len
	intc 3 // 32
	==

	// argument 1 (memberAddress) for addMember must be a address
	assert

	// mbrPay: pay
	txn GroupIndex
	intc 0 // 1
	-
	dup
	gtxns TypeEnum
	intc 0 //  pay
	==

	// argument 2 (mbrPay) for addMember must be a pay transaction
	assert

	// execute addMember(pay,address,string)void
	callsub addMember
	intc 0 // 1
	return

// addMember(mbrPay: PayTxn, memberAddress: Address, memberName: string): void
addMember:
	proto 3 0

	// contracts\Jointly.algo.ts:61
	// this.authorizeOnlyCreator()
	callsub authorizeOnlyCreator

	// contracts\Jointly.algo.ts:62
	// assert(!this.membersListings({ memberAddress: memberAddress}).exists, 'Member already exist')
	frame_dig -2 // memberAddress: Address
	box_len
	swap
	pop
	!

	// Member already exist
	assert

	// contracts\Jointly.algo.ts:63
	// verifyPayTxn(mbrPay, {
	//       sender: this.app.creator,
	//       receiver: this.app.address,
	//       amount: membersMbr,
	//     })
	// verify sender
	frame_dig -1 // mbrPay: PayTxn
	gtxns Sender
	txna Applications 0
	app_params_get AppCreator
	pop
	==

	// transaction verification failed: {"txn":"mbrPay","field":"sender","expected":"this.app.creator"}
	assert

	// verify receiver
	frame_dig -1 // mbrPay: PayTxn
	gtxns Receiver
	global CurrentApplicationAddress
	==

	// transaction verification failed: {"txn":"mbrPay","field":"receiver","expected":"this.app.address"}
	assert

	// verify amount
	frame_dig -1 // mbrPay: PayTxn
	gtxns Amount
	pushint 68100
	==

	// transaction verification failed: {"txn":"mbrPay","field":"amount","expected":"membersMbr"}
	assert

	// contracts\Jointly.algo.ts:69
	// this.membersListings({ memberAddress: memberAddress}).value = {
	//       memberAddress: memberAddress,
	//       memberName: memberName,
	//     }
	frame_dig -2 // memberAddress: Address
	dup
	box_del
	pop
	bytec 1 //  initial head
	bytec 1 //  initial tail
	pushbytes 0x0022 // initial head offset
	frame_dig -2 // memberAddress: Address
	callsub *process_static_tuple_element
	frame_dig -3 // memberName: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	callsub *process_dynamic_tuple_element
	pop // pop head offset
	concat // concat head and tail
	box_put

	// contracts\Jointly.algo.ts:73
	// this.totalMembers.value = this.totalMembers.value +1
	bytec 4 //  "totalMembers"
	dup
	app_global_get
	intc 0 // 1
	+
	app_global_put
	retsub

// getAsset()uint64
*abi_route_getAsset:
	// The ABI return prefix
	pushbytes 0x151f7c75

	// execute getAsset()uint64
	callsub getAsset
	itob
	concat
	log
	intc 0 // 1
	return

// getAsset(): AssetID
getAsset:
	proto 0 1

	// contracts\Jointly.algo.ts:77
	// return this.registeredAssetCreated.value;
	pushbytes 0x72656769737465726564417373657443726561746564 // "registeredAssetCreated"
	app_global_get
	retsub

// setProposal(pay,address,string,string)void
*abi_route_setProposal:
	// proposal: string
	txna ApplicationArgs 3
	extract 2 0

	// proposerName: string
	txna ApplicationArgs 2
	extract 2 0

	// proposerAddress: address
	txna ApplicationArgs 1
	dup
	len
	intc 3 // 32
	==

	// argument 2 (proposerAddress) for setProposal must be a address
	assert

	// mbrPay: pay
	txn GroupIndex
	intc 0 // 1
	-
	dup
	gtxns TypeEnum
	intc 0 //  pay
	==

	// argument 3 (mbrPay) for setProposal must be a pay transaction
	assert

	// execute setProposal(pay,address,string,string)void
	callsub setProposal
	intc 0 // 1
	return

// setProposal(mbrPay: PayTxn, proposerAddress: Address, proposerName:string, proposal: string): void
setProposal:
	proto 4 0

	// contracts\Jointly.algo.ts:81
	// assert(this.executed.value === false, "There is an ongoing proposal")
	bytec 6 //  "executed"
	app_global_get
	intc 1 // 0
	getbit
	intc 1 // 0
	==

	// There is an ongoing proposal
	assert

	// contracts\Jointly.algo.ts:82
	// assert(this.membersListings({ memberAddress: proposerAddress}).exists, 'Member does not exist')
	frame_dig -2 // proposerAddress: Address
	box_len
	swap
	pop

	// Member does not exist
	assert

	// contracts\Jointly.algo.ts:83
	// assert(!this.proposalListings({key:this.counter.value}).exists, 'Proposal already exist')
	bytec 0 //  "counter"
	app_global_get
	itob
	box_len
	swap
	pop
	!

	// Proposal already exist
	assert

	// contracts\Jointly.algo.ts:84
	// this.proposerName.value = proposerName
	pushbytes 0x70726f706f7365724e616d65 // "proposerName"
	frame_dig -3 // proposerName: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	app_global_put

	// contracts\Jointly.algo.ts:85
	// this.proposal.value = proposal
	bytec 9 //  "proposal"
	frame_dig -4 // proposal: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	app_global_put

	// contracts\Jointly.algo.ts:86
	// this.totalVote.value = 0
	bytec 3 //  "totalVote"
	intc 1 // 0
	app_global_put

	// contracts\Jointly.algo.ts:87
	// this.votesInFavor.value = 0
	bytec 2 //  "votesInFavor"
	intc 1 // 0
	app_global_put

	// contracts\Jointly.algo.ts:88
	// this.votesAgainst.value = 0
	bytec 5 //  "votesAgainst"
	intc 1 // 0
	app_global_put

	// contracts\Jointly.algo.ts:90
	// verifyPayTxn(mbrPay, {
	//       sender: this.app.creator,
	//       receiver: this.app.address,
	//       amount: proposalMbr,
	//     })
	// verify sender
	frame_dig -1 // mbrPay: PayTxn
	gtxns Sender
	txna Applications 0
	app_params_get AppCreator
	pop
	==

	// transaction verification failed: {"txn":"mbrPay","field":"sender","expected":"this.app.creator"}
	assert

	// verify receiver
	frame_dig -1 // mbrPay: PayTxn
	gtxns Receiver
	global CurrentApplicationAddress
	==

	// transaction verification failed: {"txn":"mbrPay","field":"receiver","expected":"this.app.address"}
	assert

	// verify amount
	frame_dig -1 // mbrPay: PayTxn
	gtxns Amount
	pushint 71300
	==

	// transaction verification failed: {"txn":"mbrPay","field":"amount","expected":"proposalMbr"}
	assert

	// contracts\Jointly.algo.ts:96
	// this.proposalListings({key:this.counter.value}).value = {
	//       totalVote: 0,
	//       votesInFavor: 0,
	//       votesAgainst: 0,
	//       executed: 0,
	//       proposerAddress: proposerAddress,
	//       proposerName: proposerName,
	//       proposal: proposal,
	//     }
	bytec 0 //  "counter"
	app_global_get
	itob
	dup
	box_del
	pop
	bytec 1 //  initial head
	bytec 1 //  initial tail
	bytec 10 //  initial head offset
	bytec 7 // 0x0000000000000000
	callsub *process_static_tuple_element
	bytec 7 // 0x0000000000000000
	callsub *process_static_tuple_element
	bytec 7 // 0x0000000000000000
	callsub *process_static_tuple_element
	bytec 7 // 0x0000000000000000
	callsub *process_static_tuple_element
	frame_dig -2 // proposerAddress: Address
	callsub *process_static_tuple_element
	frame_dig -3 // proposerName: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	callsub *process_dynamic_tuple_element
	frame_dig -4 // proposal: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	callsub *process_dynamic_tuple_element
	pop // pop head offset
	concat // concat head and tail
	box_put

	// contracts\Jointly.algo.ts:105
	// this.executed.value = true
	bytec 6 //  "executed"
	intc 0 // 1
	bytec 8 // 0x00
	intc 1 // 0
	uncover 2
	setbit
	app_global_put
	retsub

// vote(bool,address)void
*abi_route_vote:
	// memberAddress: address
	txna ApplicationArgs 2
	dup
	len
	intc 3 // 32
	==

	// argument 0 (memberAddress) for vote must be a address
	assert

	// inFavor: bool
	txna ApplicationArgs 1
	dup
	len
	intc 0 // 1
	==

	// argument 1 (inFavor) for vote must be a bool
	assert
	intc 1 // 0
	getbit

	// execute vote(bool,address)void
	callsub vote
	intc 0 // 1
	return

// vote(inFavor: boolean, memberAddress: Address): void
vote:
	proto 2 0

	// contracts\Jointly.algo.ts:109
	// assert(this.membersListings({ memberAddress: memberAddress}).exists)
	frame_dig -2 // memberAddress: Address
	box_len
	swap
	pop
	assert

	// contracts\Jointly.algo.ts:110
	// assert(this.executed.value === true, "There is no ongoing proposal")
	bytec 6 //  "executed"
	app_global_get
	intc 1 // 0
	getbit
	intc 0 // 1
	==

	// There is no ongoing proposal
	assert

	// contracts\Jointly.algo.ts:112
	// this.totalVote.value = this.totalVote.value + 1
	bytec 3 //  "totalVote"
	dup
	app_global_get
	intc 0 // 1
	+
	app_global_put

	// *if0_condition
	// contracts\Jointly.algo.ts:113
	// inFavor
	frame_dig -1 // inFavor: boolean
	bz *if0_else

	// *if0_consequent
	// contracts\Jointly.algo.ts:114
	// this.votesInFavor.value = this.votesInFavor.value + 1
	bytec 2 //  "votesInFavor"
	dup
	app_global_get
	intc 0 // 1
	+
	app_global_put
	b *if0_end

*if0_else:
	// contracts\Jointly.algo.ts:116
	// this.votesAgainst.value = this.votesAgainst.value + 1
	bytec 5 //  "votesAgainst"
	dup
	app_global_get
	intc 0 // 1
	+
	app_global_put

*if0_end:
	// contracts\Jointly.algo.ts:118
	// this.executeProposal()
	callsub executeProposal
	retsub

// executeProposal(): void
executeProposal:
	proto 0 0

	// Push empty bytes after the frame pointer to reserve space for local variables
	bytec 1 // 0x
	dupn 6

	// contracts\Jointly.algo.ts:122
	// majorityRequired:uint64 = 1
	intc 0 // 1
	frame_bury 0 // majorityRequired: uint64

	// *if1_condition
	// contracts\Jointly.algo.ts:123
	// this.totalMembers.value >= 2
	bytec 4 //  "totalMembers"
	app_global_get
	intc 2 // 2
	>=
	bz *if1_end

	// *if1_consequent
	// contracts\Jointly.algo.ts:124
	// majorityRequired = (this.totalMembers.value / 2)
	bytec 4 //  "totalMembers"
	app_global_get
	intc 2 // 2
	/
	frame_bury 0 // majorityRequired: uint64

*if1_end:
	// *if2_condition
	// contracts\Jointly.algo.ts:127
	// this.votesInFavor.value >= majorityRequired && this.totalVote.value >= this.totalMembers.value
	bytec 2 //  "votesInFavor"
	app_global_get
	frame_dig 0 // majorityRequired: uint64
	>=
	dup
	bz *skip_and0
	bytec 3 //  "totalVote"
	app_global_get
	bytec 4 //  "totalMembers"
	app_global_get
	>=
	&&

*skip_and0:
	bz *if2_elseif1_condition

	// *if2_consequent
	// contracts\Jointly.algo.ts:128
	// currentMemberAddress = this.proposalListings({key:this.counter.value}).value.proposerAddress
	bytec 0 //  "counter"
	app_global_get
	itob
	box_get

	// box value does not exist: this.proposalListings({key:this.counter.value}).value
	assert
	store 255 // full array
	load 255 // full array
	extract 32 32
	frame_bury 1 // currentMemberAddress: address

	// contracts\Jointly.algo.ts:129
	// currentProposerName = this.proposalListings({key:this.counter.value}).value.proposerName
	bytec 0 //  "counter"
	app_global_get
	itob
	box_get

	// box value does not exist: this.proposalListings({key:this.counter.value}).value
	assert
	store 255 // full array
	intc 4 // 64
	load 255 // full array
	load 255 // full array
	uncover 2
	extract_uint16
	dup // duplicate start of element
	load 255 // full array
	swap
	extract_uint16 // get number of elements
	intc 0 //  get type length
	* // multiply by type length
	intc 2 // 2
	+ // add two for length
	extract3
	extract 2 0
	frame_bury 2 // currentProposerName: string

	// contracts\Jointly.algo.ts:130
	// currentProposal = this.proposalListings({key:this.counter.value}).value.proposal
	bytec 0 //  "counter"
	app_global_get
	itob
	box_get

	// box value does not exist: this.proposalListings({key:this.counter.value}).value
	assert
	store 255 // full array
	intc 5 // 66
	load 255 // full array
	load 255 // full array
	uncover 2
	extract_uint16
	dup // duplicate start of element
	load 255 // full array
	swap
	extract_uint16 // get number of elements
	intc 0 //  get type length
	* // multiply by type length
	intc 2 // 2
	+ // add two for length
	extract3
	extract 2 0
	frame_bury 3 // currentProposal: string

	// contracts\Jointly.algo.ts:131
	// this.proposalListings({key:this.counter.value}).value = {
	//         totalVote: this.totalVote.value,
	//         votesInFavor: this.votesInFavor.value,
	//         votesAgainst: this.votesAgainst.value,
	//         executed: 1,
	//         proposerAddress: currentMemberAddress,
	//         proposerName: currentProposerName,
	//         proposal: currentProposal,
	//       }
	bytec 0 //  "counter"
	app_global_get
	itob
	dup
	box_del
	pop
	bytec 1 //  initial head
	bytec 1 //  initial tail
	bytec 10 //  initial head offset
	bytec 3 //  "totalVote"
	app_global_get
	itob
	callsub *process_static_tuple_element
	bytec 2 //  "votesInFavor"
	app_global_get
	itob
	callsub *process_static_tuple_element
	bytec 5 //  "votesAgainst"
	app_global_get
	itob
	callsub *process_static_tuple_element
	pushbytes 0x0000000000000001
	callsub *process_static_tuple_element
	frame_dig 1 // currentMemberAddress: address
	callsub *process_static_tuple_element
	frame_dig 2 // currentProposerName: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	callsub *process_dynamic_tuple_element
	frame_dig 3 // currentProposal: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	callsub *process_dynamic_tuple_element
	pop // pop head offset
	concat // concat head and tail
	box_put

	// contracts\Jointly.algo.ts:140
	// this.proposal.value = ""
	bytec 9 //  "proposal"
	bytec 11 // 0x0000
	app_global_put

	// contracts\Jointly.algo.ts:141
	// this.totalVote.value = 0
	bytec 3 //  "totalVote"
	intc 1 // 0
	app_global_put

	// contracts\Jointly.algo.ts:142
	// this.votesInFavor.value = 0
	bytec 2 //  "votesInFavor"
	intc 1 // 0
	app_global_put

	// contracts\Jointly.algo.ts:143
	// this.votesAgainst.value = 0
	bytec 5 //  "votesAgainst"
	intc 1 // 0
	app_global_put

	// contracts\Jointly.algo.ts:144
	// this.executed.value = false
	bytec 6 //  "executed"
	intc 1 // 0
	bytec 8 // 0x00
	intc 1 // 0
	uncover 2
	setbit
	app_global_put

	// contracts\Jointly.algo.ts:145
	// this.counter.value = this.counter.value +1
	bytec 0 //  "counter"
	dup
	app_global_get
	intc 0 // 1
	+
	app_global_put
	b *if2_end

*if2_elseif1_condition:
	// contracts\Jointly.algo.ts:146
	// this.votesInFavor.value < majorityRequired && this.totalVote.value >= this.totalMembers.value
	bytec 2 //  "votesInFavor"
	app_global_get
	frame_dig 0 // majorityRequired: uint64
	<
	dup
	bz *skip_and1
	bytec 3 //  "totalVote"
	app_global_get
	bytec 4 //  "totalMembers"
	app_global_get
	>=
	&&

*skip_and1:
	bz *if2_else

	// *if2_elseif1_consequent
	// contracts\Jointly.algo.ts:147
	// currentProposerAddress = this.proposalListings({key:this.counter.value}).value.proposerAddress
	bytec 0 //  "counter"
	app_global_get
	itob
	box_get

	// box value does not exist: this.proposalListings({key:this.counter.value}).value
	assert
	store 255 // full array
	load 255 // full array
	extract 32 32
	frame_bury 4 // currentProposerAddress: address

	// contracts\Jointly.algo.ts:148
	// currentProposerName = this.proposalListings({key:this.counter.value}).value.proposerName
	bytec 0 //  "counter"
	app_global_get
	itob
	box_get

	// box value does not exist: this.proposalListings({key:this.counter.value}).value
	assert
	store 255 // full array
	intc 4 // 64
	load 255 // full array
	load 255 // full array
	uncover 2
	extract_uint16
	dup // duplicate start of element
	load 255 // full array
	swap
	extract_uint16 // get number of elements
	intc 0 //  get type length
	* // multiply by type length
	intc 2 // 2
	+ // add two for length
	extract3
	extract 2 0
	frame_bury 5 // currentProposerName: string

	// contracts\Jointly.algo.ts:149
	// currentProposal = this.proposalListings({key:this.counter.value}).value.proposal
	bytec 0 //  "counter"
	app_global_get
	itob
	box_get

	// box value does not exist: this.proposalListings({key:this.counter.value}).value
	assert
	store 255 // full array
	intc 5 // 66
	load 255 // full array
	load 255 // full array
	uncover 2
	extract_uint16
	dup // duplicate start of element
	load 255 // full array
	swap
	extract_uint16 // get number of elements
	intc 0 //  get type length
	* // multiply by type length
	intc 2 // 2
	+ // add two for length
	extract3
	extract 2 0
	frame_bury 6 // currentProposal: string

	// contracts\Jointly.algo.ts:150
	// this.proposalListings({key:this.counter.value}).value = {
	//         totalVote: this.totalVote.value,
	//         votesInFavor: this.votesInFavor.value,
	//         votesAgainst: this.votesAgainst.value,
	//         executed: 0,
	//         proposerAddress: currentProposerAddress,
	//         proposerName: currentProposerName,
	//         proposal: currentProposal,
	//       }
	bytec 0 //  "counter"
	app_global_get
	itob
	dup
	box_del
	pop
	bytec 1 //  initial head
	bytec 1 //  initial tail
	bytec 10 //  initial head offset
	bytec 3 //  "totalVote"
	app_global_get
	itob
	callsub *process_static_tuple_element
	bytec 2 //  "votesInFavor"
	app_global_get
	itob
	callsub *process_static_tuple_element
	bytec 5 //  "votesAgainst"
	app_global_get
	itob
	callsub *process_static_tuple_element
	bytec 7 // 0x0000000000000000
	callsub *process_static_tuple_element
	frame_dig 4 // currentProposerAddress: address
	callsub *process_static_tuple_element
	frame_dig 5 // currentProposerName: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	callsub *process_dynamic_tuple_element
	frame_dig 6 // currentProposal: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	callsub *process_dynamic_tuple_element
	pop // pop head offset
	concat // concat head and tail
	box_put

	// contracts\Jointly.algo.ts:159
	// this.proposal.value = ""
	bytec 9 //  "proposal"
	bytec 11 // 0x0000
	app_global_put

	// contracts\Jointly.algo.ts:160
	// this.totalVote.value = 0
	bytec 3 //  "totalVote"
	intc 1 // 0
	app_global_put

	// contracts\Jointly.algo.ts:161
	// this.votesInFavor.value = 0
	bytec 2 //  "votesInFavor"
	intc 1 // 0
	app_global_put

	// contracts\Jointly.algo.ts:162
	// this.votesAgainst.value = 0
	bytec 5 //  "votesAgainst"
	intc 1 // 0
	app_global_put

	// contracts\Jointly.algo.ts:163
	// this.executed.value = false
	bytec 6 //  "executed"
	intc 1 // 0
	bytec 8 // 0x00
	intc 1 // 0
	uncover 2
	setbit
	app_global_put

	// contracts\Jointly.algo.ts:164
	// this.counter.value = this.counter.value +1
	bytec 0 //  "counter"
	dup
	app_global_get
	intc 0 // 1
	+
	app_global_put
	b *if2_end

*if2_else:

*if2_end:
	retsub

*create_NoOp:
	pushbytes 0xb8447b36 // method "createApplication()void"
	txna ApplicationArgs 0
	match *abi_route_createApplication

	// this contract does not implement the given ABI method for create NoOp
	err

*call_NoOp:
	pushbytes 0x440a2e00 // method "authorizeOnlyCreator()void"
	pushbytes 0x06d438dc // method "addMember(pay,address,string)void"
	pushbytes 0x1bde47d5 // method "getAsset()uint64"
	pushbytes 0x84354d00 // method "setProposal(pay,address,string,string)void"
	pushbytes 0xe7b1e322 // method "vote(bool,address)void"
	txna ApplicationArgs 0
	match *abi_route_authorizeOnlyCreator *abi_route_addMember *abi_route_getAsset *abi_route_setProposal *abi_route_vote

	// this contract does not implement the given ABI method for call NoOp
	err

*process_static_tuple_element:
	proto 4 3
	frame_dig -4 // tuple head
	frame_dig -1 // element
	concat
	frame_dig -3 // tuple tail
	frame_dig -2 // head offset
	retsub

*process_dynamic_tuple_element:
	proto 4 3
	frame_dig -4 // tuple head
	frame_dig -2 // head offset
	concat
	frame_bury -4 // tuple head
	frame_dig -1 // element
	dup
	len
	frame_dig -2 // head offset
	btoi
	+
	itob
	extract 6 2
	frame_bury -2 // head offset
	frame_dig -3 // tuple tail
	swap
	concat
	frame_bury -3 // tuple tail
	frame_dig -4 // tuple head
	frame_dig -3 // tuple tail
	frame_dig -2 // head offset
	retsub